name: CI Pipeline for Robot Framework Tests on Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: windows-latest  # This specifies to use a Windows-based runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  # Check out your code

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Use the Python version you need

      - name: Install Robot Framework and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install robotframework  # Install Robot Framework
          pip install robotframework-seleniumlibrary  # Install Selenium Library (if needed)
          pip install allure-robotframework  # Install Allure Report generator (optional, for reporting)
      
      - name: Run Robot Framework Tests
        run: |
          cd robot_tests  # Navigate to the folder containing the tests
          robot test_suite_1.robot  # Execute your Robot Framework test suite
          robot test_suite_2.robot  # (Optional) Another test suite, add more as needed

      - name: Upload Robot Framework Test Results to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: robot-test-results
          path: robot_tests/output/*.xml  # Path to the output XML test results

      - name: Generate Allure Report (Optional)
        run: |
          pip install allure-pytest
          allure serve robot_tests/output  # Generate Allure report from the XML results
          
      - name: Post Test Results to ReportPortal (Optional)
        run: |
          curl -X POST -H "Content-Type: application/json" -d @robot_tests/output/results.json https://reportportal.example.com/api/v1/import_results
          # Replace with your actual ReportPortal API endpoint and results format

